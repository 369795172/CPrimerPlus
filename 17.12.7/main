/* main.c */
#include <stdio.h>
#include <ctype.h>
#include "wordtree.h"

#define LMAX 100
void display(Node *node);
char *take(char *p, char word[]);

int main(void)
{
    char str[LMAX], *p;
    FILE *fp;
    Tree article;
    Item item;
    InitializeTree(&article);
    
    printf("input the filename:\n");
    gets(str);
    while ((fp = fopen(str, "r")) == NULL)
    {
        printf("can't open %s, input again:\n", str);
        gets(str);
    }
    
    while ((p = fgets(str, LMAX, fp)) != NULL)
    {
        while (*(p = take(p, item.word)) != '\0')
        {
            if (InTree(&item, &article) == false)
            {
                item.times = 1;
                AddItem(&item, &article);
            }
            else
                ChangeItem(&item, &article);
        }
    }
    while (1)
    {
       printf("\na) list all the words\n");
       printf("b) report how many times the word occurred\n");
       printf("c) quit\n");
       gets(str);
       switch (tolower(str[0]))
       {
            case 'a': Traverse(&article, display); break;
            case 'b': gets(item.word);
                      if (InTree(&item, &article))
                         DisplayItem(&item, &article);
                      else
                         puts("the word is not in the tree");
                      break;
            case 'c': puts("quit");
                      DeleteAll(&article);
                      return 0;
            default: break;
       } 
    }
}

void display(Node *node)
{
    printf("%-20s%-20d\n", node->item.word, node->item.frequency);
}

char *take(char *p, char word[])
{
    while (!isalpha(*p))
    {
        if (*p == '\0')
            return p;
        p++;
    }
    do {
        *word++ = *p++;
    } while (isalpha(*p));
    *word = '\0';
    return p;
}

